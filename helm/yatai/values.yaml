# Default values for yatai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

registry: quay.io/bentoml

image:
  repository: yatai
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

configFileContent:
  # You can put your config.yaml content here. This is the configuration of the Yatai api-server, example content you can find here: https://github.com/bentoml/Yatai/blob/main/yatai-config.sample.yaml

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  className: ''
  enabled: false
  hosts:
    - host: yatai.example.com
      paths:
      - /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

commonLabels: {}

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  host: localhost
  port: 5432
  user: yatai
  database: yatai
  sslmode: disable
  password: ''
  passwordExistingSecretName: ''
  passwordExistingSecretKey: ''
  maxOpenConns: 10
  maxIdleConns: 10
  connMaxLifetime: 15m

s3:
  endpoint: ''
  region: ''
  bucketName: ''
  secure: true
  accessKey: ''
  secretKey: ''
  accessKeyExistingSecretName: ''
  aceessKeyExistingSecretKey: 'access_key'
  secretKeyExistingSecretName: ''
  secretKeyExistingSecretKey: 'secret_key'

enableHostTimeZone: false

transmissionStrategy: proxy
doNotTrack: false

internalImages:
  debugger: quay.io/bentoml/bento-debugger:0.0.7
