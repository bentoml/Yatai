name: Release

on:
  release:
    types: [ published ]

jobs:

  build-dashboard:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: '**/dashboard/node_modules'
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/dashboard/yarn.lock') }}

      - name: Install packages
        run: cd dashboard; yarn

      - name: Build dashboard
        run: cd dashboard; NODE_OPTIONS="--max_old_space_size=4096" yarn build
        env:
          CI: false

      - name: Set git sha_short outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git describe --match=NeVeRmAtCh --tags --always --dirty | cut -c 1-7)"

      - name: Upload dashboard artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-northeast-1
          source: './dashboard/build/'
          dest: 's3://yatai-github-artifacts/dashboard-artifacts/${{ steps.vars.outputs.sha_short }}'
          flags: --recursive

  build-api-server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.3' # The Go version to download (if necessary) and use.

      - run: go version

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Build api-server
        run: make build-api-server

      - name: Set git sha_short outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git describe --match=NeVeRmAtCh --tags --always --dirty | cut -c 1-7)"

      - name: Upload api-server artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-northeast-1
          source: './bin/'
          dest: 's3://yatai-github-artifacts/api-server-artifacts/${{ steps.vars.outputs.sha_short }}'
          flags: --recursive

  release-image:
    runs-on: ubuntu-latest

    needs:
      - build-dashboard
      - build-api-server

    steps:
      - uses: actions/checkout@v2

      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Set git sha_short outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git describe --match=NeVeRmAtCh --tags --always --dirty | cut -c 1-7)"

      - name: Download dashboard artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-northeast-1
          dest: './dashboard/build/'
          source: 's3://yatai-github-artifacts/dashboard-artifacts/${{ steps.vars.outputs.sha_short }}'
          flags: --recursive

      - name: Download api-server artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-northeast-1
          dest: './bin/'
          source: 's3://yatai-github-artifacts/api-server-artifacts/${{ steps.vars.outputs.sha_short }}'
          flags: --recursive

      - name: Build yatai image
        run: make build-image

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Tag Yatai image as release
        env:
          VERSION: ${{ steps.tag.outputs.tag }}
        run: make tag-release

  release-helm-charts:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    needs:
      - release-image

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Package, Index and Publish
        working-directory: ./helm/yatai
        env:
          VERSION: ${{ steps.tag.outputs.tag }}
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        run: make release

concurrency:
  group: yatai-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
